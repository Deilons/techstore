// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using techstore.Data;

#nullable disable

namespace techstore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241003132208_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("techstore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("techstore.Models.Admin", b =>
                {
                    b.HasBaseType("techstore.Models.User");

                    b.Property<string>("AdminPrivileges")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("UserId1")
                        .IsUnique();

                    b.ToTable("user", t =>
                        {
                            t.Property("UserId")
                                .HasColumnName("Admin_UserId");

                            t.Property("UserId1")
                                .HasColumnName("Admin_UserId1");
                        });

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("techstore.Models.Employee", b =>
                {
                    b.HasBaseType("techstore.Models.User");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("UserId1")
                        .IsUnique();

                    b.ToTable("user");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("techstore.Models.Admin", b =>
                {
                    b.HasOne("techstore.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("techstore.Models.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("techstore.Models.User", null)
                        .WithOne("AdminDetails")
                        .HasForeignKey("techstore.Models.Admin", "UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("techstore.Models.Employee", b =>
                {
                    b.HasOne("techstore.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("techstore.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("techstore.Models.User", null)
                        .WithOne("EmployeeDetails")
                        .HasForeignKey("techstore.Models.Employee", "UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("techstore.Models.User", b =>
                {
                    b.Navigation("AdminDetails")
                        .IsRequired();

                    b.Navigation("EmployeeDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
